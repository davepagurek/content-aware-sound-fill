#!/usr/bin/env python3

from matplotlib import pyplot as plt
import numpy as np

wfc_distribution_data = np.transpose([
    [0.08650467378893115, 0.058936914864777125],
    [0.11408284023668638, 0.33552711025238496],
    [0.06358646931501284, 0.06361554150947656],
    [0.025266255826981537, 0.035233905802058665],
    [0.016341889570061167, 0.05912310773868968],
    [0.07603503094617253, 0.2776047082057572],
    [0.00992866773231092, 0.02925703518788455],
    [0.01205622027344744, 0.018919052252881787],
    [0.03105898940965409, 0.033510005161777934],
    [0.00335345740290575, 0.044849580444483506],
    [0.17313740408698544, 0.31397158927080293],
    [0.00250721061756408, 0.09338305633825898],
    [0.013232583612373956, 0.07696880705255013],
    [0.05555555555555555, 0.05555555555555555],
    [0.040520000031756445, 0.09812217804646087],
])

wfc_time_data = np.transpose([
[0.8750556608550789, 0.002915305831637398],
[0.004453621655416858, 0.020912833350714616],
[0.7285079911471394, 0.01576245408208809],
[0.8778548384126562, 0.007423746676324995],
[0.00409193076596756, 0.006704457430811801],
[0.003486773933715707, 0.008370405113942467],
[0.0180260054766809, 0.0020150071495406703],
[0.012513072504461705, 0.02055979313131303],
[0.0051067583341719664, 0.0032119561028249887],
[0.9111338758008971, 0.002202177026815646],
[0.8501737190366316, 0.036823750228147545],
[0.005683883780526968, 0.004476012957914366],
[0.003490607858991829, 0.03845574165997917],
[0.9482749341422487, 0.0007248996356926876],
[0.6420325939339068, 0.017032593933906753],
])

wfc_transition_data = np.transpose([
[32.49132445940286, 26.860437673954078],
[24.8299074074074, 27.289381408784816],
[30.07718999456469, 34.645892142416855],
[32.129711722460634, 32.52725636544484],
[12.904480060006685, 18.753468994079093],
[20.462165212409968, 23.101551343677972],
[8.178261974335115, 11.293258570949957],
[23.840162004424812, 23.100250571604438],
[12.635519227298762, 22.97176020408163],
[25.86102810650887, 30.98056618480725],
[40.99535209217654, 46.58287807989734],
[21.421969759107622, 24.255706802616967],
[6.126292868387024, 13.988940546632858],
[17.06356244623643, 17.54580673903466],
[12.164488907018407, 11.821942661308022]
])

lstm_distribution_data = np.array([
    [0.04738931523022433, 0.0177466367490132, 0.32000000000000006, 0.006915364292221669, 0.04101152734614687, 0.0009552389061323892, 0.0027906809040615776, 0.18055555555555555, 0.04588976831945798, 0.009660354689917319, 0.017294232889984197, 0.04050752001060561, 0.6224489795918366, 0.08014526001371315, 0.015448199109313632],
    [0.0823476529002243, 0.05117185159415277, 0.9046199889341582, 0.0399472314995675, 0.029547003939535115, 0.04430804801520868, 0.05662804787916017, 0.3765163396137343, 0.025601656212403436, 0.03957817135558979, 0.03037426409620848, 0.06560370734836884, 0.27714166455479194, 0.031564232618137573, 0.018550073769956175],
])

lstm_time_data = np.array([
[0.002083064203168054, 0.0013011177876368582, 0.02113546677306041, 0.04132286614262413, 0.0012093394433710344, 0.0032714051514332087, 0.004330398322851153, 0.0008373413914853928, 0.008212082022824077, 0.03551080063416568, 0.023052595885168715, 0.0014833686883104272, 0.00313786211969933, 0.00726975391898611, 0.0008353564622653842, 0.0008264097440390546],
[0.001993652053164053, 0.005442975175931385, 0.0362225140911359, 0.0026088261952264334, 0.000735220308537616, 0.0129383328954517, 0.009444881201956658, 0.025556361781273275, 0.0010847733569662643, 1.558858501783591, 0.013421712255286093, 0.03460548926818178, 0.004887774287088422, 0.020045786497561842, 0.0010032642129281064, 0.009486504647163543]
])

lstm_transition_data = np.array([
[21.420825584671732, 14.578324270884824, 18.309970239919007, 10.957578696686907, 9.51390775111916, 5.072541330257594, 5.673840830774053, 4.928244598765431, 28.09962868480725, 13.919941665677595, 3.000685871056241, 7.765082199546486, 4.8717147392290245, 20.0094753004793, 2.103615585352599, 7.754410518647739, 4.834181946160985, 5.348472222222222, 2.5008, 8.431276414544362],
[23.05481229528847, 31.479060298675666, 21.678480725623583, 11.9765625, 14.177083333333334, 9.226070425152102, 3.5, 6.413692490770414, 22.430583270345167, 25.638502381344686, 1.5, 13.946482741244647, 8.212998823832365, 20.80992747668223, 20.889273356401375, 18.783888888888885, 11.364359371199457, 7.0, 2.5, 12.160402147253457]
])

all_truth_data = np.array(list(wfc_distribution_data[0]) + list(lstm_distribution_data[0]))

plt.boxplot([ all_truth_data, wfc_distribution_data[1], lstm_distribution_data[1] ], labels=["Truth to Song", "WFC Filled to Song", "LSTM Filled to Song"])
plt.title("Squared Interval Distribution Errors")
plt.ylim(-0.01, 0.12)
plt.show()

all_truth_time_data = np.array(list(wfc_time_data[0]) + list(lstm_time_data[0]))

plt.boxplot([ all_truth_time_data, wfc_time_data[1], lstm_time_data[1] ], labels=["Truth to Song", "WFC Filled to Song", "LSTM Filled to Song"])
plt.title("Squared Duration Distribution Errors")
plt.ylim(-0.01, 0.12)
plt.show()

all_truth_transition_data = np.array(list(wfc_transition_data[0]) + list(lstm_transition_data[0]))

plt.boxplot([ all_truth_transition_data, wfc_transition_data[1], lstm_transition_data[1] ], labels=["Truth to Song", "WFC Filled to Song", "LSTM Filled to Song"])
plt.title("Squared Transition Distribution Errors")
# plt.ylim(-0.01, 0.12)
plt.show()

# wfc_to_truth = [ a/b for a, b in np.transpose(wfc_distribution_data)]
# lstm_to_truth = [ a/b for a, b in np.transpose(lstm_distribution_data)]

# plt.boxplot([ wfc_to_truth, lstm_to_truth ], labels=["WFC", "LSTM"])
# plt.title("Squared Distribution Error Ratio")
# plt.show()
